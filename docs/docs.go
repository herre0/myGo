// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addTask": {
            "post": {
                "description": "adds a task, a task object is required in the body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "POST"
                ],
                "summary": "add a task",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/deleteTask": {
            "delete": {
                "description": "Delete any task by an id parameter",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "DELETE"
                ],
                "summary": "Delete a task by Id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "returns task list in json format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET"
                ],
                "summary": "Get List of Tasks",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/updateTask": {
            "put": {
                "description": "Update any task by providing a new Task in the body and an id in the parameters",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "PUT"
                ],
                "summary": "Update a task by Id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Task API",
	Description:      "This is a sample api app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
